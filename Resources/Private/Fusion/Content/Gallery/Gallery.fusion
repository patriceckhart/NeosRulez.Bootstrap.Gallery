prototype(NeosRulez.Bootstrap:Content.Gallery) {

    page = ${request.arguments.page ? request.arguments.page : '1'}
    begin = ${this.page ? ((String.toInteger(this.page) - 1) * (String.toInteger(node.properties.itemsPerPage))) : false}
    end = ${this.page ? String.toInteger(node.properties.itemsPerPage) * String.toInteger(this.page) : false}

    assets >
    assets = ${node.properties.pagination ? Array.slice(node.properties.assets, this.begin, this.end) : node.properties.assets}

    @context.pagination = NeosRulez.Bootstrap.Gallery:Component.Pagination {
        itemsPerPage = ${String.toInteger(node.properties.itemsPerPage)}
        paginationIdentifier = ${'pagination_gallery__' + node.identifier}
        assetsLength = ${node.properties.assets ? Array.length(node.properties.assets) : false}
    }

    renderer {
        prototype(Neos.Fusion:Loop) {
            @process.pagination = ${value + pagination}
        }
    }
    @cache {
        mode = 'dynamic'
        entryIdentifier {
            node = ${node}
        }
        entryDiscriminator = ${request.arguments.page}
        context {
            1 = 'node'
            2 = 'documentNode'
        }
        entryTags {
            1 = ${Neos.Caching.nodeTag(node)}
            2 = ${Neos.Caching.nodeTag(documentNode)}
        }
    }
}

//prototype(NeosRulez.Bootstrap:Content.Gallery) < prototype(Neos.Neos:ContentComponent) {
//    assets = ${node.properties.assets}
//    lightbox = ${node.properties.lightbox ? true : false}
//    noGutters = ${node.properties.noGutters ? ' g-0' : false}
//    lightboxClassName = ${this.lightbox ? 'gallery-row row' + this.noGutters + ' lightbox' : 'gallery-row row' + this.noGutters}
//    noCropping = ${node.properties.noCropping}
//    columns = ${'col-6 ' + (node.properties.columns == '4' ? 'col-md-3' : node.properties.columns == '3' ? 'col-md-4' : node.properties.columns == '2' ? 'col-md-6' : 'col')}
//    galleryId = ${'lightbox__' + node.identifier}
//
//    renderer = afx`
//        <NeosRulez.Bootstrap:Component.AbstractContent>
//            <code @if.render={!props.assets} >
//                {I18n.translate('NeosRulez.Bootstrap:NodeTypes.Content.Gallery:content.emptyAssetList')}
//            </code>
//            <div @if.render={props.assets} class={props.lightboxClassName} >
//                <Neos.Fusion:Loop items={props.assets} itemName="asset">
//                    <div class={props.columns} >
//                        <NeosRulez.Bootstrap:Content.Gallery.Item image={asset} lightbox={props.lightbox} noCropping={props.noCropping} galleryId={props.galleryId} />
//                    </div>
//                </Neos.Fusion:Loop>
//            </div>
//        </NeosRulez.Bootstrap:Component.AbstractContent>
//    `
//}
//
//prototype(NeosRulez.Bootstrap:Content.Gallery.Item) < prototype(Neos.Fusion:Component) {
//    allowCropping = ${this.noCropping ? false : true}
//
//    renderer = afx`
//        <NeosRulez.Bootstrap:Component.ImageTag @if.render={!props.lightbox} image={props.image} width="300" height="300" allowCropping={props.allowCropping} allowUpScaling={true} />
//        <NeosRulez.Bootstrap:Component.ImageTag.Lightbox @if.render={props.lightbox} image={props.image} width="300" height="300" allowCropping={props.allowCropping} allowUpScaling={true} galleryId={props.galleryId} />
//    `
//}
